version : '3'

services :
#  producer:
#    restart: always
#    container_name: app_producer
#    build:
#      context: app/producer
#      dockerfile: Dockerfile
#    volumes:
#      - ./app:/app
#    ports:
#      - 8000:8000
#    depends_on:
##      - kafka
#      - postgres
##      - zookeeper
##      - redis
#    entrypoint: ["python", "/app/run.py", "producer"]
#  consumer:
#    restart: always
#    container_name: app_consumer
#    build:
#      context: app/consumer
#      dockerfile: Dockerfile
#    volumes:
#      - ./app:/app
#    ports:
#      - 8001:8001
#    depends_on:
#      #      - kafka
#      - postgres
#    #      - zookeeper
#    #      - redis
#    entrypoint: ["python", "/app/run.py", "consumer"]

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - /var/lib/postgres
    environment:
      POSTGRES_DB: project
      POSTGRES_USER: project
      POSTGRES_PASSWORD: project
    ports:
      - "5432:5432"
  redis:
    image: redis
    container_name: redis
    volumes:
      - ./redis:/var/lib/redis/data
    ports:
      - 6379:6379

#
#  zookeeper :
#    image : confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT : 2181
#      ZOOKEEPER_TICKTIME : 2000
#  kafka:
#    image:  confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKERID : 1
#      KAFKA_ZOOKEEPER_CONNECT : zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS : PLAINTEXT://0.0.0.0:9092
##      KAFKA_ADVERTISED_HOST_NAME: 'localhost'


